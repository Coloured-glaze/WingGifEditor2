name: Build and Package WingGifEditor2

on:
  workflow_dispatch:
    inputs:
      os:
        description: 'Operating System'
        required: true
        type: choice
        options:
          - windows-latest
          - ubuntu-latest
        default: 'windows-latest'
      qt_version:
        description: 'Qt Version'
        required: true
        type: choice
        options:
          - 5.15.2
          - 6.6.2
        default: '6.6.2'
      arch:
        description: 'Architecture'
        required: true
        type: choice
        options:
          - win64_msvc2019_64
          - gcc_64
        default: 'win64_msvc2019_64'

permissions:
  contents: write
  
env:
  BUILD_TYPE: Release

jobs:
  build-and-package:
    runs-on: ${{ inputs.os }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4.1.7
      with:
        submodules: recursive
        fetch-depth: 0
        fetch-tags: true
        
    - name: Validate inputs
      run: |
        if [[ "${{ inputs.os }}" == "windows-latest" && "${{ inputs.arch }}" == "gcc_64" ]]; then
          echo "Invalid combination: windows-latest cannot use gcc_64"
          exit 1
        fi
        if [[ "${{ inputs.os }}" == "ubuntu-latest" && "${{ inputs.arch }}" == "win64_msvc2019_64" ]]; then
          echo "Invalid combination: ubuntu-latest cannot use win64_msvc2019_64"
          exit 1
        fi
      shell: bash
        
    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{ inputs.qt_version }}
        host: ${{ inputs.os == 'windows-latest' && 'windows' || 'linux' }}
        target: 'desktop'
        arch: ${{ inputs.arch }}
        cache: true
        tools: 'tools_cmake'

    - name: Configure CMake
      run: |
        cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/install

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --parallel

    - name: Install
      run: |
        echo "Current directory: $(pwd)"
        echo "Build directory contents:"
        ls -la ${{github.workspace}}/build || true
        echo "Installing to: ${{github.workspace}}/install"
        # 创建安装目录
        mkdir -p ${{github.workspace}}/install
        # 执行CMake安装
        cmake --install ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --prefix ${{github.workspace}}/install
        # 检查安装结果
        echo "Installation completed. Install directory contents:"
        ls -la ${{github.workspace}}/install || echo "Install directory not found or empty"
        
    - name: Alternative Python-based Install (if CMake install fails)
      run: |
        echo "Trying alternative Python-based installation..."
        # 检查是否需要使用Python脚本安装
        if [ ! -d "${{github.workspace}}/install" ] || [ -z "$(ls -A ${{github.workspace}}/install)" ]; then
          echo "CMake install appears to have failed, trying Python installer..."
          python3 ${{github.workspace}}/share/installer.py install -b ${{github.workspace}}/build
        else
          echo "CMake install seems to have succeeded, skipping Python installer"
        fi

    - name: List files after build
      run: |
        echo "Listing files in install directory:"
        if [[ "${{ inputs.os }}" == "windows-latest" ]]; then
          if [ -d "${{github.workspace}}/install" ]; then
            dir ${{github.workspace}}/install
          else
            echo "Install directory not found"
          fi
        else
          ls -la ${{github.workspace}}/install || echo "Install directory not found"
        fi
      shell: bash

    - uses: actions/upload-artifact@v4
      with:
        name: WingGifEditor2-${{ inputs.os == 'windows-latest' && 'windows' || 'linux' }}-${{ inputs.qt_version }}-build-cache
        # 自动压缩为zip
        path: ${{github.workspace}}/install
