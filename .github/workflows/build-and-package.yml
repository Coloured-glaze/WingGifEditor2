name: Build and Package WingGifEditor2

on:
  workflow_dispatch:
    inputs:
      os:
        description: 'Operating System'
        required: true
        type: choice
        options:
          - windows-latest
          - ubuntu-latest
        default: 'windows-latest'
      qt_version:
        description: 'Qt Version'
        required: true
        type: choice
        options:
          - 5.15.2
          - 6.6.2
        default: '6.6.2'
      arch:
        description: 'Architecture'
        required: true
        type: choice
        options:
          - win64_msvc2019_64
          - gcc_64
        default: 'win64_msvc2019_64'

permissions:
  contents: write
  
env:
  BUILD_TYPE: Release

jobs:
  build-and-package:
    runs-on: ${{ inputs.os }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4.1.7
      with:
        submodules: recursive
        fetch-depth: 0
        fetch-tags: true
        
    - name: Validate inputs
      run: |
        if [[ "${{ inputs.os }}" == "windows-latest" && "${{ inputs.arch }}" == "gcc_64" ]]; then
          echo "Invalid combination: windows-latest cannot use gcc_64"
          exit 1
        fi
        if [[ "${{ inputs.os }}" == "ubuntu-latest" && "${{ inputs.arch }}" == "win64_msvc2019_64" ]]; then
          echo "Invalid combination: ubuntu-latest cannot use win64_msvc2019_64"
          exit 1
        fi
      shell: bash
        
    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{ inputs.qt_version }}
        host: ${{ inputs.os == 'windows-latest' && 'windows' || 'linux' }}
        target: 'desktop'
        arch: ${{ inputs.arch }}
        cache: true
        tools: 'tools_cmake'

    - name: Configure CMake
      run: |
        cmake -B ${{github.workspace}}/build \
          -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
          -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/install

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --parallel

    - name: Install
      run: cmake --install ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Package Windows (Windows)
      if: inputs.os == 'windows-latest'
      run: |
        # Create deployment directory
        mkdir -p ${{github.workspace}}/package
        
        # Copy executable and dependencies
        cp -r ${{github.workspace}}/install/* ${{github.workspace}}/package/
        
        # Use windeployqt to collect all Qt dependencies
        windeployqt --release --no-translations --no-system-d3d-compiler --no-opengl-sw ${{github.workspace}}/package/WingGifEditor2.exe
        
        # Create zip archive
        cd ${{github.workspace}}/package
        7z a -tzip ${{github.workspace}}/WingGifEditor2-windows-${{ inputs.qt_version }}-${{ inputs.arch }}.zip .
      shell: bash

    - name: Package Linux (Linux)
      if: inputs.os == 'ubuntu-latest'
      run: |
        # Create AppImage structure
        mkdir -p ${{github.workspace}}/package/AppDir/usr/bin
        mkdir -p ${{github.workspace}}/package/AppDir/usr/lib
        mkdir -p ${{github.workspace}}/package/AppDir/usr/share/applications
        mkdir -p ${{github.workspace}}/package/AppDir/usr/share/icons/hicolor/256x256/apps
        
        # Copy executable and libraries
        cp -r ${{github.workspace}}/install/* ${{github.workspace}}/package/AppDir/usr/bin/
        
        # Create desktop file
        cat > ${{github.workspace}}/package/AppDir/usr/share/applications/wing-gif-editor.desktop << EOF
        [Desktop Entry]
        Type=Application
        Name=WingGifEditor2
        Exec=WingGifEditor2
        Icon=WingGifEditor2
        Categories=Graphics;2DGraphics;RasterGraphics;
        EOF
        
        # Copy icon
        cp ${{github.workspace}}/images/icon.png ${{github.workspace}}/package/AppDir/usr/share/icons/hicolor/256x256/apps/WingGifEditor2.png
        
        # Download and use linuxdeployqt
        wget -c -nv "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
        chmod a+x linuxdeployqt-continuous-x86_64.AppImage
        
        # Create AppImage
        ./linuxdeployqt-continuous-x86_64.AppImage ${{github.workspace}}/package/AppDir/usr/share/applications/wing-gif-editor.desktop -appimage
        
        # Rename output
        mv WingGifEditor2*.AppImage ${{github.workspace}}/WingGifEditor2-linux-${{ inputs.qt_version }}-${{ inputs.arch }}.AppImage
      shell: bash

    - name: Upload executable package (Windows)
      if: inputs.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: WingGifEditor2-windows-${{ inputs.qt_version }}-${{ inputs.arch }}
        path: ${{github.workspace}}/WingGifEditor2-windows-${{ inputs.qt_version }}-${{ inputs.arch }}.zip
        retention-days: 30

    - name: Upload executable package (Linux)
      if: inputs.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: WingGifEditor2-linux-${{ inputs.qt_version }}-${{ inputs.arch }}
        path: ${{github.workspace}}/WingGifEditor2-linux-${{ inputs.qt_version }}-${{ inputs.arch }}.AppImage
        retention-days: 30

    - name: Upload build cache
      uses: actions/upload-artifact@v4
      with:
        name: WingGifEditor2-${{ inputs.os == 'windows-latest' && 'windows' || 'linux' }}-${{ inputs.qt_version }}-${{ inputs.arch }}-build-cache
        path: ${{github.workspace}}/build
        retention-days: 7
    
